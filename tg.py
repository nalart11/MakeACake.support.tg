import telebot
from telebot import types
from datetime import datetime

token = 'your_token'
ADMIN_CHAT_ID = 'your_tg_admin_id'
bot = telebot.TeleBot(token)

active_chats = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π")
    btn2 = types.KeyboardButton('üá¨üáß English')
    btn3 = types.KeyboardButton('üá∑üá∏ –°—Ä–ø—Å–∫–∏')
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.from_user.id, "üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / üá¨üáß Choose your language / üá∑üá∏ –ò–∑–∞–±–µ—Ä–∏ —ò–µ–∑–∏–∫", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫' or message.text == 'Change Language' or message.text == '–ü—Ä–æ–º–µ–Ω–∏—Ç–µ —ò–µ–∑–∏–∫':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π")
        btn2 = types.KeyboardButton('üá¨üáß English')
        btn3 = types.KeyboardButton('üá∑üá∏ –°—Ä–ø—Å–∫–∏')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.from_user.id, "üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / üá¨üáß Choose your language / üá∑üá∏ –ò–∑–∞–±–µ—Ä–∏ —ò–µ–∑–∏–∫", reply_markup=markup)
    elif message.text == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':  # rus
        send_russian_main_menu(message)
    elif message.text == 'üá¨üáß English':  # eng
        send_english_main_menu(message)
    elif message.text == 'üá∑üá∏ –°—Ä–ø—Å–∫–∏':  # srb
        send_serbian_main_menu(message)
    elif message.text == '–ö—Ç–æ –º—ã —Ç–∞–∫–∏–µ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1)
        bot.send_message(message.from_user.id, "–ú—ã - MakeACake Studios, –º–æ–ª–æ–¥–∞—è —Å—Ç—É–¥–∏—è –Ω–µ–¥–∞–≤–Ω–æ –ø–æ—è–≤–∏–≤—à–∞—è—Å—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –Ω–∏–æ—Ç–∫—É–¥–∞. –ù–∞—à —Å–æ–∑–¥–∞—Ç–µ–ª—å - –í–µ–ª–∏–∫–∏–π –∏ –ú–æ–≥—É—á–∏–π @nalart11, –æ–Ω –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç –≤—Å–µ–º –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–º –∑–¥–µ—Å—å.", reply_markup=markup)
    elif message.text == '–ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1)
        bot.send_message(message.from_user.id, '–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –Ω–∏–∂–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤:')
        bot.send_message(message.from_user.id, '[–ù–∞—à Discord –∫–∞–Ω–∞–ª](https://discord.com/invite/uKXcU3py3q)', parse_mode='MarkdownV2')
        bot.send_message(message.from_user.id, '–ù–∞—à –¢–ì –∫–∞–Ω–∞–ª (–í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)')
        bot.send_message(message.from_user.id, '[–¢–ì –≤–ª–∞–¥–µ–ª—å—Ü–∞](https://t.me/nalart11)', parse_mode='MarkdownV2', reply_markup=markup)
    elif message.text == '–ö–∞–∫ –∫ –Ω–∞–º –ø–æ–ø–∞—Å—Ç—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1)
        bot.send_message(message.from_user.id, '–ù–∏–∫–∞–∫. üíÄ', reply_markup=markup)
    elif message.text == '–ù–∞–∑–∞–¥':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ö—Ç–æ –º—ã —Ç–∞–∫–∏–µ')
        btn2 = types.KeyboardButton('–ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ')
        btn3 = types.KeyboardButton('–ö–∞–∫ –∫ –Ω–∞–º –ø–æ–ø–∞—Å—Ç—å')
        btn4 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.from_user.id, '‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å', reply_markup=markup)
    elif message.text == 'Who are we':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Back')
        markup.add(btn1)
        bot.send_message(message.from_user.id, "We are MakeACake Studios, a young studio that recently appeared almost out of nowhere. Our creator is the Great and Powerful @nalart11, he basically directs everything that happens here.", reply_markup=markup)
    elif message.text == 'Partnership':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Back')
        markup.add(btn1)
        bot.send_message(message.from_user.id, 'To contact us you can use one of the following methods:')
        bot.send_message(message.from_user.id, '[Our Discord channel](https://discord.com/invite/uKXcU3py3q)', parse_mode='MarkdownV2')
        bot.send_message(message.from_user.id, 'Our Telegramm channel (Temporarily unavailable)')
        bot.send_message(message.from_user.id, "[Owner's Telegramm](https://t.me/nalart11)", parse_mode='MarkdownV2', reply_markup=markup)
    elif message.text == 'How to get to us':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Back')
        markup.add(btn1)
        bot.send_message(message.from_user.id, 'No way. üíÄ', reply_markup=markup)
    elif message.text == 'Back':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('Who are we')
        btn2 = types.KeyboardButton('Partnership')
        btn3 = types.KeyboardButton('How to get to us')
        btn4 = types.KeyboardButton('Change Language')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.from_user.id, '‚ùì Ask a question', reply_markup=markup)
    elif message.text == '–ö–æ —Å–º–æ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ü–æ–≤—Ä–∞—Ç–∞–∫')
        markup.add(btn1)
        bot.send_message(message.from_user.id, "–ú–∏ —Å–º–æ MakeACake Studios, –º–ª–∞–¥–∏ —Å—Ç—É–¥–∏–æ –∫–æ—ò–∏ —Å–µ –Ω–µ–¥–∞–≤–Ω–æ –ø–æ—ò–∞–≤–∏–æ –≥–æ—Ç–æ–≤–æ –Ω–∏–æ—Ç–∫—É–¥–∞. –ù–∞—à –∫—Ä–µ–∞—Ç–æ—Ä —ò–µ –í–µ–ª–∏–∫–∏ –∏ –ú–æ—õ–Ω–∏ @nalart11, –æ–Ω —É —Å—É—à—Ç–∏–Ω–∏ —Ä–µ–∂–∏—Ä–∞ —Å–≤–µ —à—Ç–æ —Å–µ –æ–≤–¥–µ –¥–µ—à–∞–≤–∞.", reply_markup=markup)
    elif message.text == '–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ü–æ–≤—Ä–∞—Ç–∞–∫')
        markup.add(btn1)
        bot.send_message(message.from_user.id, '–î–∞ –±–∏—Å—Ç–µ –Ω–∞—Å –∫–æ–Ω—Ç–∞–∫—Ç–∏—Ä–∞–ª–∏, –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç–∏—Ç–∏ —ò–µ–¥–∞–Ω –æ–¥ —Å–ª–µ–¥–µ—õ–∏—Ö –º–µ—Ç–æ–¥–∞:')
        bot.send_message(message.from_user.id, '[–ù–∞—à Discord –∫–∞–Ω–∞–ª](https://discord.com/invite/uKXcU3py3q)', parse_mode='MarkdownV2')
        bot.send_message(message.from_user.id, '–ù–∞—à Telegramm –∫–∞–Ω–∞–ª (–ü—Ä–∏–≤—Ä–µ–º–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–∞–Ω)')
        bot.send_message(message.from_user.id, "[Telegramm –∑–∞ –∫—Ä–µ–∞—Ç–æ—Ä–µ](https://t.me/nalart11)", parse_mode='MarkdownV2', reply_markup=markup)
    elif message.text == '–ö–∞–∫–æ –¥–æ—õ–∏ –¥–æ –Ω–∞—Å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ü–æ–≤—Ä–∞—Ç–∞–∫')
        markup.add(btn1)
        bot.send_message(message.from_user.id, '–ù–µ –¥–æ–ª–∞–∑–∏ —É –æ–±–∑–∏—Ä. üíÄ', reply_markup=markup)
    elif message.text == '–ü–æ–≤—Ä–∞—Ç–∞–∫':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ö–æ —Å–º–æ')
        btn2 = types.KeyboardButton('–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ')
        btn3 = types.KeyboardButton('–ö–∞–∫–æ –¥–æ—õ–∏ –¥–æ –Ω–∞—Å')
        btn4 = types.KeyboardButton('–ü—Ä–æ–º–µ–Ω–∏—Ç–µ —ò–µ–∑–∏–∫')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.from_user.id, '‚ùì –ü–æ—Å—Ç–∞–≤–∏—Ç–µ –ø–∏—Ç–∞—ö–µ', reply_markup=markup)
    elif message.text == '–ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º' or message.text == 'Contact us' or message.text == '–ö–æ–Ω—Ç–∞–∫—Ç–∏—Ä–∞—ò—Ç–µ –Ω–∞—Å':
        start_dialog(message)
    elif message.text == '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥' or message.text == 'Stop dialog' or message.text == '–ó–∞—É—Å—Ç–∞–≤–∏—Ç–µ –¥–∏—ò–∞–ª–æ–≥':
        stop_dialog(message)
    elif message.from_user.id in active_chats:
        forward_message_to_admin(message)
    else:
        handle_non_command_message(message)

def send_russian_main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ö—Ç–æ –º—ã —Ç–∞–∫–∏–µ')
    btn2 = types.KeyboardButton('–ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ')
    btn3 = types.KeyboardButton('–ö–∞–∫ –∫ –Ω–∞–º –ø–æ–ø–∞—Å—Ç—å')
    btn4 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫')
    btn5 = types.KeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º')  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.from_user.id, '‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å', reply_markup=markup)

def send_english_main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('Who are we')
    btn2 = types.KeyboardButton('Partnership')
    btn3 = types.KeyboardButton('How to get to us')
    btn4 = types.KeyboardButton('Change Language')
    btn5 = types.KeyboardButton('Contact us')  # New button for sending message
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.from_user.id, '‚ùì Ask a question', reply_markup=markup)

def send_serbian_main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ö–æ —Å–º–æ')
    btn2 = types.KeyboardButton('–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ')
    btn3 = types.KeyboardButton('–ö–∞–∫–æ –¥–æ—õ–∏ –¥–æ –Ω–∞—Å')
    btn4 = types.KeyboardButton('–ü—Ä–æ–º–µ–Ω–∏—Ç–µ —ò–µ–∑–∏–∫')
    btn5 = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç–∏—Ä–∞—ò—Ç–µ –Ω–∞—Å')  # –ù–æ–≤–∞ –¥—É–≥–º–∞–¥ –∑–∞ —Å–ª–∞—ö–µ –ø–æ—Ä—É–∫–µ
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.from_user.id, '‚ùì –ü–æ—Å—Ç–∞–≤–∏—Ç–µ –ø–∏—Ç–∞—ö–µ', reply_markup=markup)

def handle_non_command_message(message):
    bot.send_message(message.from_user.id, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π.")

def start_dialog(message):
    client_id = message.from_user.id
    username = message.from_user.username
    markup = types.InlineKeyboardMarkup()
    start_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    active_chats[client_id] = {'username': username, 'start_time': start_time, 'messages': []}
    end_button = types.InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥", callback_data=f"stop_{client_id}")
    markup.add(end_button)
    bot.send_message(message.from_user.id, "üìù –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –Ω–∞–∂–º–∏—Ç–µ '–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥'.", reply_markup=markup)
    notify_admin_about_new_chat(client_id, username, start_time)

def forward_message_to_admin(message):
    client_id = message.from_user.id
    active_chats[client_id]['messages'].append(message.text)
    markup = types.InlineKeyboardMarkup()
    reply_button = types.InlineKeyboardButton("–û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"reply_{client_id}")
    end_button = types.InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥", callback_data=f"end_{client_id}")  # –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
    markup.add(reply_button, end_button)
    bot.send_message(ADMIN_CHAT_ID, f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {active_chats[client_id]['username']} ({client_id}): {message.text}", reply_markup=markup)

def notify_admin_about_new_chat(client_id, username, start_time):
    bot.send_message(ADMIN_CHAT_ID, f"–ù–æ–≤—ã–π –¥–∏–∞–ª–æ–≥:\nTelegram ID: {client_id}\nUsername: @{username}\n–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {start_time}")

@bot.callback_query_handler(func=lambda call: call.data.startswith("reply_") or call.data.startswith("end_") or call.data.startswith("stop_"))
def callback_handler(call):
    if call.data.startswith("reply_"):
        client_id = int(call.data.split("_")[1])
        if client_id in active_chats:
            bot.send_message(call.message.chat.id, f"–û—Ç–≤–µ—Ç—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {client_id}:")
            bot.register_next_step_handler(call.message, process_admin_reply, client_id)
        else:
            bot.send_message(call.message.chat.id, "–î–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å client_id.")
    elif call.data.startswith("end_"):
        client_id = int(call.data.split("_")[1])
        if client_id in active_chats:
            stop_dialog_by_admin(call, client_id)
        else:
            bot.send_message(call.message.chat.id, "–î–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å client_id.")
    elif call.data.startswith("stop_"):
        client_id = int(call.data.split("_")[1])
        if client_id in active_chats:
            stop_dialog(client_id)
        else:
            bot.send_message(call.message.chat.id, "–î–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å client_id.")


def process_admin_reply(message, client_id):
    response = message.text
    bot.send_message(client_id, f"–û—Ç–≤–µ—Ç: {response}")
    bot.send_message(message.chat.id, f"–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {client_id}: {response}")

def stop_dialog(client_id):
    if client_id in active_chats:
        bot.send_message(client_id, "–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω.")
        bot.send_message(ADMIN_CHAT_ID, f"–î–∏–∞–ª–æ–≥ —Å {active_chats[client_id]['username']} ({client_id}) –∑–∞–≤–µ—Ä—à–µ–Ω.")
        del active_chats[client_id]
    else:
        bot.send_message(client_id, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞.")

def stop_dialog_by_admin(call, client_id):
    if client_id in active_chats:
        bot.send_message(client_id, "–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
        bot.send_message(call.message.chat.id, f"–î–∏–∞–ª–æ–≥ —Å {active_chats[client_id]['username']} ({client_id}) –∑–∞–≤–µ—Ä—à–µ–Ω.")
        del active_chats[client_id]
    else:
        bot.send_message(call.message.chat.id, "–î–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

bot.infinity_polling(none_stop=True, interval=0)
